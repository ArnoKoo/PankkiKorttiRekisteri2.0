package fxPankki.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import fxPankki.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2025.04.16 22:46:33 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class DebitTest {



  // Generated by ComTest BEGIN
  /** 
   * testClone58 
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testClone58() throws CloneNotSupportedException {    // Debit: 58
    Debit deb = new Debit(); 
    deb.vastaaDebit(1); 
    Debit kopio = deb.clone(); 
    assertEquals("From: Debit line: 63", deb.toString(), kopio.toString()); 
    deb.vastaaDebit(2); 
    assertEquals("From: Debit line: 65", false, kopio.toString().equals(deb.toString())); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString103 */
  @Test
  public void testToString103() {    // Debit: 103
    Debit deb = new Debit(); 
    deb.vastaaDebit(1); 
    assertEquals("From: Debit line: 106", "0|1|Debit|1.1.2025|4000 0000 0000 0001|1234|420|true|FI41 0000 0000 0000 00|2023", deb.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testParse128 */
  @Test
  public void testParse128() {    // Debit: 128
    Debit deb = new Debit(); 
    deb.parse(" 2 | 10 | Debit | 1.1.2025 | 4000 0000 0000 0001 | 1234 | 420 | true | FI41 0000 0000 0000 00 | 2023"); 
    assertEquals("From: Debit line: 131", 10, deb.getAsiakasNro()); 
    assertEquals("From: Debit line: 132", "2|10|Debit|1.1.2025|4000 0000 0000 0001|1234|420|false|FI41 0000 0000 0000 00|2023", deb.toString()); 
    deb.rekisteroi(); 
    int n = deb.getTunnusNro(); 
    deb.parse("" + (n+20)); 
    deb.rekisteroi(); 
    assertEquals("From: Debit line: 137", n+20+1, deb.getTunnusNro()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testRekisteroi183 */
  @Test
  public void testRekisteroi183() {    // Debit: 183
    Debit pitsi1 = new Debit(); 
    assertEquals("From: Debit line: 185", 0, pitsi1.getTunnusNro()); 
    pitsi1.rekisteroi(); 
    Debit pitsi2 = new Debit(); 
    pitsi2.rekisteroi(); 
    int n1 = pitsi1.getTunnusNro(); 
    int n2 = pitsi2.getTunnusNro(); 
    assertEquals("From: Debit line: 191", n2-1, n1); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnna244 */
  @Test
  public void testAnna244() {    // Debit: 244
    Debit deb = new Debit(); 
    deb.tunnusNro = 2; 
    deb.asiakasNro = 10; 
    deb.korttityyppi = "Debit"; 
    deb.pvm = "1.1.2025"; 
    deb.korttinumero = "4000 0000 0000 0001"; 
    deb.PIN = "1234"; 
    deb.CVC = "420"; 
    deb.lähimaksu = true; 
    deb.VPT = "FI41 0000 0000 0000 00"; 
    deb.salasana = "2023"; 
    assertEquals("From: Debit line: 257", "2", deb.anna(0)); 
    assertEquals("From: Debit line: 258", "10", deb.anna(1)); 
    assertEquals("From: Debit line: 259", "Debit", deb.anna(2)); 
    assertEquals("From: Debit line: 260", "1.1.2025", deb.anna(3)); 
    assertEquals("From: Debit line: 261", "4000 0000 0000 0001", deb.anna(4)); 
    assertEquals("From: Debit line: 262", "1234", deb.anna(5)); 
    assertEquals("From: Debit line: 263", "420", deb.anna(6)); 
    assertEquals("From: Debit line: 264", "true", deb.anna(7)); 
    assertEquals("From: Debit line: 265", "FI41 0000 0000 0000 00", deb.anna(8)); 
    assertEquals("From: Debit line: 266", "2023", deb.anna(9)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAseta334 */
  @Test
  public void testAseta334() {    // Debit: 334
    Debit deb = new Debit(); 
    assertEquals("From: Debit line: 336", null, deb.aseta(3, "1.1.2025")); 
    deb.aseta(3, "kissa"); 
    assertEquals("From: Debit line: 338", null, deb.aseta(2, "Mikä tahansa")); 
  } // Generated by ComTest END
}