package fxPankki.test;
// Generated by ComTest BEGIN
import java.util.*;
import java.io.File;
import fxPankki.*;
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

import KorttiRekisteri.SailoException;

/**
 * Test class made by ComTest
 * @version 2025.04.16 22:54:12 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class PankkikorttiTest {



  // Generated by ComTest BEGIN
  /** testAnnaDebitti56 */
  @Test
  public void testAnnaDebitti56() {    // Pankkikortti: 56
    Pankkikortti pankkikortti = new Pankkikortti(); 
    Debit pitsi21 = new Debit(2); pankkikortti.lisaaDebitti(pitsi21); 
    Debit pitsi11 = new Debit(1); pankkikortti.lisaaDebitti(pitsi11); 
    Debit pitsi22 = new Debit(2); pankkikortti.lisaaDebitti(pitsi22); 
    Debit pitsi12 = new Debit(1); pankkikortti.lisaaDebitti(pitsi12); 
    Debit pitsi23 = new Debit(2); pankkikortti.lisaaDebitti(pitsi23); 
    Debit pitsi51 = new Debit(5); pankkikortti.lisaaDebitti(pitsi51); 
    List<Debit> loytyneet; 
    loytyneet = pankkikortti.annaDebitti(3); 
    assertEquals("From: Pankkikortti line: 69", 0, loytyneet.size()); 
    loytyneet = pankkikortti.annaDebitti(1); 
    assertEquals("From: Pankkikortti line: 71", 2, loytyneet.size()); 
    assertEquals("From: Pankkikortti line: 72", true, loytyneet.get(0) == pitsi11); 
    assertEquals("From: Pankkikortti line: 73", true, loytyneet.get(1) == pitsi12); 
    loytyneet = pankkikortti.annaDebitti(5); 
    assertEquals("From: Pankkikortti line: 75", 1, loytyneet.size()); 
    assertEquals("From: Pankkikortti line: 76", true, loytyneet.get(0) == pitsi51); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaKreditti107 */
  @Test
  public void testAnnaKreditti107() {    // Pankkikortti: 107
    Pankkikortti pankkikortti = new Pankkikortti(); 
    Credit cred1 = new Credit(1); cred1.vastaaCredit(2); 
    Credit cred2 = new Credit(1); cred2.vastaaCredit(3); 
    pankkikortti.lisaaKreditti(cred1); 
    pankkikortti.lisaaKreditti(cred2); 
    List<Credit> loydetyt = pankkikortti.annaKreditti(1); 
    assertEquals("From: Pankkikortti line: 114", 2, loydetyt.size()); 
    assertEquals("From: Pankkikortti line: 115", true, loydetyt.get(0) == cred1); 
    assertEquals("From: Pankkikortti line: 116", true, loydetyt.get(1) == cred2); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaYhdistelma147 */
  @Test
  public void testAnnaYhdistelma147() {    // Pankkikortti: 147
    Pankkikortti pankkikortti = new Pankkikortti(); 
    Yhdistelmä yhd1 = new Yhdistelmä(1); yhd1.vastaaYhdistelmä(2); 
    Yhdistelmä yhd2 = new Yhdistelmä(1); yhd2.vastaaYhdistelmä(3); 
    pankkikortti.lisaaYhdistelma(yhd1); 
    pankkikortti.lisaaYhdistelma(yhd2); 
    List<Yhdistelmä> loydetyt = pankkikortti.annaYhdistelma(1); 
    assertEquals("From: Pankkikortti line: 154", 2, loydetyt.size()); 
    assertEquals("From: Pankkikortti line: 155", true, loydetyt.get(0) == yhd1); 
    assertEquals("From: Pankkikortti line: 156", true, loydetyt.get(1) == yhd2); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta173 
   * @throws SailoException when error
   */
  @Test
  public void testLueTiedostosta173() throws SailoException {    // Pankkikortti: 173
    Pankkikortti pankkikortti = new Pankkikortti(); 
    Debit pitsi21 = new Debit(); pitsi21.vastaaDebit(2); 
    Debit pitsi11 = new Debit(); pitsi11.vastaaDebit(1); 
    Debit pitsi22 = new Debit(); pitsi22.vastaaDebit(2); 
    Debit pitsi12 = new Debit(); pitsi12.vastaaDebit(1); 
    Debit pitsi23 = new Debit(); pitsi23.vastaaDebit(2); 
    String tiedNimi = "testiPankki"; 
    File ftied = new File(tiedNimi+".dat"); 
    ftied.delete(); 
    try {
    pankkikortti.lueTiedostosta(tiedNimi); 
    fail("Pankkikortti: 185 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
    pankkikortti.lisaaDebitti(pitsi21); 
    pankkikortti.lisaaDebitti(pitsi11); 
    pankkikortti.lisaaDebitti(pitsi22); 
    pankkikortti.lisaaDebitti(pitsi12); 
    pankkikortti.lisaaDebitti(pitsi23); 
    pankkikortti.tallenna(); 
    pankkikortti = new Pankkikortti(); 
    pankkikortti.lueTiedostosta(tiedNimi); 
    pankkikortti.lisaaDebitti(pitsi23); 
    pankkikortti.tallenna(); 
    assertEquals("From: Pankkikortti line: 196", true, ftied.delete()); 
    File fbak = new File(tiedNimi+".bak"); 
    assertEquals("From: Pankkikortti line: 198", true, fbak.delete()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testPoistaDebit385 
   * @throws SailoException when error
   */
  @Test
  public void testPoistaDebit385() throws SailoException {    // Pankkikortti: 385
    Pankkikortti pankkikortti = new Pankkikortti(); 
    Debit pitsi21 = new Debit(); pitsi21.vastaaDebit(2); 
    Debit pitsi11 = new Debit(); pitsi11.vastaaDebit(1); 
    Debit pitsi22 = new Debit(); pitsi22.vastaaDebit(2); 
    Debit pitsi12 = new Debit(); pitsi12.vastaaDebit(1); 
    Debit pitsi23 = new Debit(); pitsi23.vastaaDebit(2); 
    pankkikortti.lisaaDebitti(pitsi21); 
    pankkikortti.lisaaDebitti(pitsi11); 
    pankkikortti.lisaaDebitti(pitsi22); 
    pankkikortti.lisaaDebitti(pitsi12); 
    assertEquals("From: Pankkikortti line: 398", false, pankkikortti.poistaDebit(pitsi23)); assertEquals("From: Pankkikortti line: 398", 4, pankkikortti.getLkm()); 
    assertEquals("From: Pankkikortti line: 399", true, pankkikortti.poistaDebit(pitsi11)); assertEquals("From: Pankkikortti line: 399", 3, pankkikortti.getLkm()); 
    List<Debit> h = pankkikortti.annaDebitti(1); 
    assertEquals("From: Pankkikortti line: 401", 1, h.size()); 
    assertEquals("From: Pankkikortti line: 402", pitsi12, h.get(0)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPoistaAsiakkaanDebit416 */
  @Test
  public void testPoistaAsiakkaanDebit416() {    // Pankkikortti: 416
    Pankkikortti pankkikortti = new Pankkikortti(); 
    Debit pitsi21 = new Debit(); pitsi21.vastaaDebit(2); 
    Debit pitsi11 = new Debit(); pitsi11.vastaaDebit(1); 
    Debit pitsi22 = new Debit(); pitsi22.vastaaDebit(2); 
    Debit pitsi12 = new Debit(); pitsi12.vastaaDebit(1); 
    Debit pitsi23 = new Debit(); pitsi23.vastaaDebit(2); 
    pankkikortti.lisaaDebitti(pitsi21); 
    pankkikortti.lisaaDebitti(pitsi11); 
    pankkikortti.lisaaDebitti(pitsi22); 
    pankkikortti.lisaaDebitti(pitsi12); 
    pankkikortti.lisaaDebitti(pitsi23); 
    assertEquals("From: Pankkikortti line: 428", 3, pankkikortti.poistaAsiakkaanDebit(2)); assertEquals("From: Pankkikortti line: 428", 2, pankkikortti.getLkm()); 
    assertEquals("From: Pankkikortti line: 429", 0, pankkikortti.poistaAsiakkaanDebit(3)); assertEquals("From: Pankkikortti line: 429", 2, pankkikortti.getLkm()); 
    List<Debit> h = pankkikortti.annaDebitti(2); 
    assertEquals("From: Pankkikortti line: 431", 0, h.size()); 
    h = pankkikortti.annaDebitti(1); 
    assertEquals("From: Pankkikortti line: 433", pitsi11, h.get(0)); 
    assertEquals("From: Pankkikortti line: 434", pitsi12, h.get(1)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPoistaCredit454 */
  @Test
  public void testPoistaCredit454() {    // Pankkikortti: 454
    Pankkikortti pankkikortti = new Pankkikortti(); 
    Credit cred = new Credit(); cred.vastaaCredit(2); 
    pankkikortti.lisaaKreditti(cred); 
    assertEquals("From: Pankkikortti line: 458", true, pankkikortti.poistaCredit(cred)); 
    assertEquals("From: Pankkikortti line: 459", 0, pankkikortti.annaKreditti(cred.getAsiakasNro()).size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPoistaAsiakkaanCredit472 */
  @Test
  public void testPoistaAsiakkaanCredit472() {    // Pankkikortti: 472
    Pankkikortti pankkikortti = new Pankkikortti(); 
    Credit cred1 = new Credit(); cred1.vastaaCredit(2); 
    Credit cred2 = new Credit(); cred2.vastaaCredit(2); 
    pankkikortti.lisaaKreditti(cred1); 
    pankkikortti.lisaaKreditti(cred2); 
    assertEquals("From: Pankkikortti line: 478", 2, pankkikortti.poistaAsiakkaanCredit(2)); 
    assertEquals("From: Pankkikortti line: 479", 0, pankkikortti.annaKreditti(2).size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPoistaYhdistelma499 */
  @Test
  public void testPoistaYhdistelma499() {    // Pankkikortti: 499
    Pankkikortti pankkikortti = new Pankkikortti(); 
    Yhdistelmä yhd = new Yhdistelmä(); yhd.vastaaYhdistelmä(2); 
    pankkikortti.lisaaYhdistelma(yhd); 
    assertEquals("From: Pankkikortti line: 503", true, pankkikortti.poistaYhdistelma(yhd)); 
    assertEquals("From: Pankkikortti line: 504", 0, pankkikortti.annaYhdistelma(yhd.getAsiakasNro()).size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPoistaAsiakkaanYhdistelma517 */
  @Test
  public void testPoistaAsiakkaanYhdistelma517() {    // Pankkikortti: 517
    Pankkikortti pankkikortti = new Pankkikortti(); 
    Yhdistelmä yhd1 = new Yhdistelmä(); yhd1.vastaaYhdistelmä(2); 
    Yhdistelmä yhd2 = new Yhdistelmä(); yhd2.vastaaYhdistelmä(2); 
    pankkikortti.lisaaYhdistelma(yhd1); 
    pankkikortti.lisaaYhdistelma(yhd2); 
    assertEquals("From: Pankkikortti line: 523", 2, pankkikortti.poistaAsiakkaanYhdistelma(2)); 
    assertEquals("From: Pankkikortti line: 524", 0, pankkikortti.annaYhdistelma(2).size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testKorvaaTaiLisaaDebit545 
   * @throws SailoException when error
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testKorvaaTaiLisaaDebit545() throws SailoException,CloneNotSupportedException {    // Pankkikortti: 545
    Pankkikortti pankkikortti = new Pankkikortti(); 
    Debit deb1 = new Debit(), deb2 = new Debit(); 
    deb1.rekisteroi(); deb2.rekisteroi(); 
    assertEquals("From: Pankkikortti line: 551", 0, pankkikortti.getLkm()); 
    pankkikortti.korvaaTaiLisaaDebit(deb1); assertEquals("From: Pankkikortti line: 552", 1, pankkikortti.getLkm()); 
    pankkikortti.korvaaTaiLisaaDebit(deb2); assertEquals("From: Pankkikortti line: 553", 2, pankkikortti.getLkm()); 
    Debit deb3 = deb1.clone(); 
    deb3.aseta(2,"kkk"); 
    pankkikortti.korvaaTaiLisaaDebit(deb3); assertEquals("From: Pankkikortti line: 556", 2, pankkikortti.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testKorvaaTaiLisaaCredit575 
   * @throws SailoException when error
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testKorvaaTaiLisaaCredit575() throws SailoException,CloneNotSupportedException {    // Pankkikortti: 575
    Credit cred1 = new Credit(1); cred1.vastaaCredit(2); 
    Credit cred2 = new Credit(1); cred2.vastaaCredit(3); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testKorvaaTaiLisaaYhdistelma597 
   * @throws SailoException when error
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testKorvaaTaiLisaaYhdistelma597() throws SailoException,CloneNotSupportedException {    // Pankkikortti: 597
    Yhdistelmä yhd1 = new Yhdistelmä(1); yhd1.vastaaYhdistelmä(2); 
    Yhdistelmä yhd2 = new Yhdistelmä(1); yhd2.vastaaYhdistelmä(3); 
  } // Generated by ComTest END
}