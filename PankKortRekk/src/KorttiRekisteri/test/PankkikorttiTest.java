package KorttiRekisteri.test;
// Generated by ComTest BEGIN
import java.util.*;
import java.io.File;
import KorttiRekisteri.*;
import fxPankki.Credit;
import fxPankki.Debit;
import fxPankki.Pankkikortti;
import fxPankki.Yhdistelmä;

import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2025.04.16 18:51:23 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class PankkikorttiTest {


  // Generated by ComTest BEGIN
  /** testAnnaDebitti54 */
  @Test
  public void testAnnaDebitti54() {    // Pankkikortti: 54
    Pankkikortti pankkikortti = new Pankkikortti(); 
    Debit pitsi21 = new Debit(2); pankkikortti.lisaaDebitti(pitsi21); 
    Debit pitsi11 = new Debit(1); pankkikortti.lisaaDebitti(pitsi11); 
    Debit pitsi22 = new Debit(2); pankkikortti.lisaaDebitti(pitsi22); 
    Debit pitsi12 = new Debit(1); pankkikortti.lisaaDebitti(pitsi12); 
    Debit pitsi23 = new Debit(2); pankkikortti.lisaaDebitti(pitsi23); 
    Debit pitsi51 = new Debit(5); pankkikortti.lisaaDebitti(pitsi51); 
    List<Debit> loytyneet; 
    loytyneet = pankkikortti.annaDebitti(3); 
    assertEquals("From: Pankkikortti line: 67", 0, loytyneet.size()); 
    loytyneet = pankkikortti.annaDebitti(1); 
    assertEquals("From: Pankkikortti line: 69", 2, loytyneet.size()); 
    assertEquals("From: Pankkikortti line: 70", true, loytyneet.get(0) == pitsi11); 
    assertEquals("From: Pankkikortti line: 71", true, loytyneet.get(1) == pitsi12); 
    loytyneet = pankkikortti.annaDebitti(5); 
    assertEquals("From: Pankkikortti line: 73", 1, loytyneet.size()); 
    assertEquals("From: Pankkikortti line: 74", true, loytyneet.get(0) == pitsi51); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaKreditti105 */
  @Test
  public void testAnnaKreditti105() {    // Pankkikortti: 105
    Pankkikortti pankkikortti = new Pankkikortti(); 
    Credit cred1 = new Credit(1); cred1.vastaaCredit(2); 
    Credit cred2 = new Credit(1); cred2.vastaaCredit(3); 
    pankkikortti.lisaaKreditti(cred1); 
    pankkikortti.lisaaKreditti(cred2); 
    List<Credit> loydetyt = pankkikortti.annaKreditti(1); 
    assertEquals("From: Pankkikortti line: 112", 2, loydetyt.size()); 
    assertEquals("From: Pankkikortti line: 113", true, loydetyt.get(0) == cred1); 
    assertEquals("From: Pankkikortti line: 114", true, loydetyt.get(1) == cred2); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaYhdistelma145 */
  @Test
  public void testAnnaYhdistelma145() {    // Pankkikortti: 145
    Pankkikortti pankkikortti = new Pankkikortti(); 
    Yhdistelmä yhd1 = new Yhdistelmä(1); yhd1.vastaaYhdistelmä(2); 
    Yhdistelmä yhd2 = new Yhdistelmä(1); yhd2.vastaaYhdistelmä(3); 
    pankkikortti.lisaaYhdistelma(yhd1); 
    pankkikortti.lisaaYhdistelma(yhd2); 
    List<Yhdistelmä> loydetyt = pankkikortti.annaYhdistelma(1); 
    assertEquals("From: Pankkikortti line: 152", 2, loydetyt.size()); 
    assertEquals("From: Pankkikortti line: 153", true, loydetyt.get(0) == yhd1); 
    assertEquals("From: Pankkikortti line: 154", true, loydetyt.get(1) == yhd2); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta171 
   * @throws SailoException when error
   */
  @Test
  public void testLueTiedostosta171() throws SailoException {    // Pankkikortti: 171
    Pankkikortti pankkikortti = new Pankkikortti(); 
    Debit pitsi21 = new Debit(); pitsi21.vastaaDebit(2); 
    Debit pitsi11 = new Debit(); pitsi11.vastaaDebit(1); 
    Debit pitsi22 = new Debit(); pitsi22.vastaaDebit(2); 
    Debit pitsi12 = new Debit(); pitsi12.vastaaDebit(1); 
    Debit pitsi23 = new Debit(); pitsi23.vastaaDebit(2); 
    String tiedNimi = "testiPankki"; 
    File ftied = new File(tiedNimi+".dat"); 
    ftied.delete(); 
    try {
    pankkikortti.lueTiedostosta(tiedNimi); 
    fail("Pankkikortti: 183 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
    pankkikortti.lisaaDebitti(pitsi21); 
    pankkikortti.lisaaDebitti(pitsi11); 
    pankkikortti.lisaaDebitti(pitsi22); 
    pankkikortti.lisaaDebitti(pitsi12); 
    pankkikortti.lisaaDebitti(pitsi23); 
    pankkikortti.tallenna(); 
    pankkikortti = new Pankkikortti(); 
    pankkikortti.lueTiedostosta(tiedNimi);  
    pankkikortti.lisaaDebitti(pitsi23); 
    pankkikortti.tallenna(); 
    assertEquals("From: Pankkikortti line: 201", true, ftied.delete()); 
    File fbak = new File(tiedNimi+".bak"); 
    assertEquals("From: Pankkikortti line: 203", true, fbak.delete()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testPoistaDebit390 
   * @throws SailoException when error
   */
  @Test
  public void testPoistaDebit390() throws SailoException {    // Pankkikortti: 390
    Pankkikortti pankkikortti = new Pankkikortti(); 
    Debit pitsi21 = new Debit(); pitsi21.vastaaDebit(2); 
    Debit pitsi11 = new Debit(); pitsi11.vastaaDebit(1); 
    Debit pitsi22 = new Debit(); pitsi22.vastaaDebit(2); 
    Debit pitsi12 = new Debit(); pitsi12.vastaaDebit(1); 
    Debit pitsi23 = new Debit(); pitsi23.vastaaDebit(2); 
    pankkikortti.lisaaDebitti(pitsi21); 
    pankkikortti.lisaaDebitti(pitsi11); 
    pankkikortti.lisaaDebitti(pitsi22); 
    pankkikortti.lisaaDebitti(pitsi12); 
    assertEquals("From: Pankkikortti line: 403", false, pankkikortti.poistaDebit(pitsi23)); assertEquals("From: Pankkikortti line: 403", 4, pankkikortti.getLkm()); 
    assertEquals("From: Pankkikortti line: 404", true, pankkikortti.poistaDebit(pitsi11)); assertEquals("From: Pankkikortti line: 404", 3, pankkikortti.getLkm()); 
    List<Debit> h = pankkikortti.annaDebitti(1); 
    assertEquals("From: Pankkikortti line: 406", 1, h.size()); 
    assertEquals("From: Pankkikortti line: 407", pitsi12, h.get(0)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPoistaAsiakkaanDebit421 */
  @Test
  public void testPoistaAsiakkaanDebit421() {    // Pankkikortti: 421
    Pankkikortti pankkikortti = new Pankkikortti(); 
    Debit pitsi21 = new Debit(); pitsi21.vastaaDebit(2); 
    Debit pitsi11 = new Debit(); pitsi11.vastaaDebit(1); 
    Debit pitsi22 = new Debit(); pitsi22.vastaaDebit(2); 
    Debit pitsi12 = new Debit(); pitsi12.vastaaDebit(1); 
    Debit pitsi23 = new Debit(); pitsi23.vastaaDebit(2); 
    pankkikortti.lisaaDebitti(pitsi21); 
    pankkikortti.lisaaDebitti(pitsi11); 
    pankkikortti.lisaaDebitti(pitsi22); 
    pankkikortti.lisaaDebitti(pitsi12); 
    pankkikortti.lisaaDebitti(pitsi23); 
    assertEquals("From: Pankkikortti line: 433", 3, pankkikortti.poistaAsiakkaanDebit(2)); assertEquals("From: Pankkikortti line: 433", 2, pankkikortti.getLkm()); 
    assertEquals("From: Pankkikortti line: 434", 0, pankkikortti.poistaAsiakkaanDebit(3)); assertEquals("From: Pankkikortti line: 434", 2, pankkikortti.getLkm()); 
    List<Debit> h = pankkikortti.annaDebitti(2); 
    assertEquals("From: Pankkikortti line: 436", 0, h.size()); 
    h = pankkikortti.annaDebitti(1); 
    assertEquals("From: Pankkikortti line: 438", pitsi11, h.get(0)); 
    assertEquals("From: Pankkikortti line: 439", pitsi12, h.get(1)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPoistaCredit459 */
  @Test
  public void testPoistaCredit459() {    // Pankkikortti: 459
    Pankkikortti pankkikortti = new Pankkikortti(); 
    Credit cred = new Credit(); cred.vastaaCredit(2); 
    pankkikortti.lisaaKreditti(cred); 
    assertEquals("From: Pankkikortti line: 463", true, pankkikortti.poistaCredit(cred)); 
    assertEquals("From: Pankkikortti line: 464", 0, pankkikortti.annaKreditti(cred.getAsiakasNro()).size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPoistaAsiakkaanCredit477 */
  @Test
  public void testPoistaAsiakkaanCredit477() {    // Pankkikortti: 477
    Pankkikortti pankkikortti = new Pankkikortti(); 
    Credit cred1 = new Credit(); cred1.vastaaCredit(2); 
    Credit cred2 = new Credit(); cred2.vastaaCredit(2); 
    pankkikortti.lisaaKreditti(cred1); 
    pankkikortti.lisaaKreditti(cred2); 
    assertEquals("From: Pankkikortti line: 483", 2, pankkikortti.poistaAsiakkaanCredit(2)); 
    assertEquals("From: Pankkikortti line: 484", 0, pankkikortti.annaKreditti(2).size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPoistaYhdistelma504 */
  @Test
  public void testPoistaYhdistelma504() {    // Pankkikortti: 504
    Pankkikortti pankkikortti = new Pankkikortti(); 
    Yhdistelmä yhd = new Yhdistelmä(); yhd.vastaaYhdistelmä(2); 
    pankkikortti.lisaaYhdistelma(yhd); 
    assertEquals("From: Pankkikortti line: 508", true, pankkikortti.poistaYhdistelma(yhd)); 
    assertEquals("From: Pankkikortti line: 509", 0, pankkikortti.annaYhdistelma(yhd.getAsiakasNro()).size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPoistaAsiakkaanYhdistelma522 */
  @Test
  public void testPoistaAsiakkaanYhdistelma522() {    // Pankkikortti: 522
    Pankkikortti pankkikortti = new Pankkikortti(); 
    Yhdistelmä yhd1 = new Yhdistelmä(); yhd1.vastaaYhdistelmä(2); 
    Yhdistelmä yhd2 = new Yhdistelmä(); yhd2.vastaaYhdistelmä(2); 
    pankkikortti.lisaaYhdistelma(yhd1); 
    pankkikortti.lisaaYhdistelma(yhd2); 
    assertEquals("From: Pankkikortti line: 528", 2, pankkikortti.poistaAsiakkaanYhdistelma(2)); 
    assertEquals("From: Pankkikortti line: 529", 0, pankkikortti.annaYhdistelma(2).size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testKorvaaTaiLisaaDebit550 
   * @throws SailoException when error
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testKorvaaTaiLisaaDebit550() throws SailoException,CloneNotSupportedException {    // Pankkikortti: 550
    Pankkikortti pankkikortti = new Pankkikortti(); 
    Debit deb1 = new Debit(), deb2 = new Debit(); 
    deb1.rekisteroi(); deb2.rekisteroi(); 
    assertEquals("From: Pankkikortti line: 556", 0, pankkikortti.getLkm()); 
    pankkikortti.korvaaTaiLisaaDebit(deb1); assertEquals("From: Pankkikortti line: 557", 1, pankkikortti.getLkm()); 
    pankkikortti.korvaaTaiLisaaDebit(deb2); assertEquals("From: Pankkikortti line: 558", 2, pankkikortti.getLkm()); 
    Debit deb3 = deb1.clone(); 
    deb3.aseta(2,"kkk"); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testKorvaaTaiLisaaCredit587 
 * */
  @Test
  public void testKorvaaTaiLisaaCredit587()  {    // Pankkikortti: 587
    Pankkikortti pankkikortti = new Pankkikortti(); 
    Credit cred1 = new Credit(1); cred1.vastaaCredit(2); 
    Credit cred2 = new Credit(1); cred2.vastaaCredit(3); 
    try {
        pankkikortti.korvaaTaiLisaaCredit(cred1);
    } catch (SailoException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    } 
    try {
        pankkikortti.korvaaTaiLisaaCredit(cred2);
    } catch (SailoException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    } 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testKorvaaTaiLisaaYhdistelma612 */
  @Test
  public void testKorvaaTaiLisaaYhdistelma612() {    // Pankkikortti: 612
    Pankkikortti pankkikortti = new Pankkikortti(); 
    Yhdistelmä yhd1 = new Yhdistelmä(1); yhd1.vastaaYhdistelmä(2); 
    Yhdistelmä yhd2 = new Yhdistelmä(1); yhd2.vastaaYhdistelmä(3); 
    try {
        pankkikortti.korvaaTaiLisaaYhdistelma(yhd1);
    } catch (SailoException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    } 
    try {
        pankkikortti.korvaaTaiLisaaYhdistelma(yhd2);
    } catch (SailoException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    } 
  } // Generated by ComTest END
}