package KorttiRekisteri.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import KorttiRekisteri.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2025.04.16 19:17:15 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class AsiakasTest {


  // Generated by ComTest BEGIN
  /** testGetNimi31 */
  @Test
  public void testGetNimi31() {    // Asiakas: 31
    Asiakas aku = new Asiakas(); 
    aku.vastaaErik(); 
    { String _l_=aku.getNimi(),_r_="Ankka Aku .*"; if ( !_l_.matches(_r_) ) fail("From: Asiakas line: 34" + " does not match: ["+ _l_ + "] != [" + _r_ + "]");}; 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testClone167 
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testClone167() throws CloneNotSupportedException {    // Asiakas: 167
    Asiakas asiakas = new Asiakas(); 
    asiakas.parse("   3  |  Ankka Aku   | 123"); 
    Asiakas kopio = asiakas.clone(); 
    assertEquals("From: Asiakas line: 172", asiakas.toString(), kopio.toString()); 
    asiakas.parse("   4  |  Ankka Tupu   | 123"); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString209 */
  @Test
  public void testToString209() {    // Asiakas: 209
    Asiakas asiakas = new Asiakas(); 
    asiakas.parse("   3  |  Ankka Aku   | 030201-111C"); 
    assertEquals("From: Asiakas line: 212", true, asiakas.toString().startsWith("3|Ankka Aku|030201-111C|")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testParse234 */
  @Test
  public void testParse234() {    // Asiakas: 234
    Asiakas asiakas = new Asiakas(); 
    asiakas.parse("   3  |  Ankka Aku   | 030201-111C"); 
    assertEquals("From: Asiakas line: 237", 3, asiakas.getTunnusNro()); 
    assertEquals("From: Asiakas line: 238", true, asiakas.toString().startsWith("3|Ankka Aku|030201-111C|"));  // on enemmäkin kuin 3 kenttää, siksi loppu |
    asiakas.rekisteroi(); 
    int n = asiakas.getTunnusNro(); 
    asiakas.parse(""+(n+20));  // Otetaan merkkijonosta vain tunnusnumero
    asiakas.rekisteroi();  // ja tarkistetaan että seuraavalla kertaa tulee yhtä isompi
    assertEquals("From: Asiakas line: 244", n+20+1, asiakas.getTunnusNro()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAseta369 */
  @Test
  public void testAseta369() {    // Asiakas: 369
    Asiakas asiakas = new Asiakas(); 
    assertEquals("From: Asiakas line: 371", null, asiakas.aseta(1,"Ankka Aku")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testRekisteroi414 */
  @Test
  public void testRekisteroi414() {    // Asiakas: 414
    Asiakas aku1 = new Asiakas(); 
    assertEquals("From: Asiakas line: 416", 0, aku1.getTunnusNro()); 
    aku1.rekisteroi(); 
    Asiakas aku2 = new Asiakas(); 
    aku2.rekisteroi(); 
    int n1 = aku1.getTunnusNro(); 
    int n2 = aku2.getTunnusNro(); 
    assertEquals("From: Asiakas line: 422", n2-1, n1); 
  } // Generated by ComTest END
}